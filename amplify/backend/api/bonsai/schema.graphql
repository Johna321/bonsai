# This "input" configures a global authorization rule to enable private access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# type Task
#   @model
#   @auth(
#     rules: [
#       { allow: groups, groups: ["Managers"], operations: [create, update, read, delete] }
#       { allow: groups, groups: ["Employees"], operations: [read] }
#     ]
#   ) {
#   id: ID!
#   title: String!
#   description: String
#   status: String
# }
# 
# type PrivateNote @model @auth(rules: [{ allow: owner }]) {
#   id: ID!
#   content: String!
# }

type Form 
  @model 
  @auth(rules:
    [
      { allow: owner },
      { allow: private, operations: [read]}
    ]
  ){
  id: ID!
  title: String!
  questions: [Question] @hasMany
}

type Question 
  @model
  @auth(rules:
    [
      { allow: owner },
      { allow: private, operations: [read]}
    ]
  ){
  id: ID!
  content: String!
  image: String
}

type Student 
  @model
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]){
  id: ID!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  classes: [Class] @manyToMany(relationName: "StudentClasses")
}

type Teacher 
  @model 
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]){
  id: ID!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  classes: [Class] @hasMany
}

type Class 
  @model
  @auth(rules:
    [
      { allow: owner },
      { allow: private, operations: [read]}
    ]
  ){
  id: ID!
  name: String!
  code: String!
  posts: [Post] @hasMany
  students: [Student] @manyToMany(relationName: "StudentClasses")
}

type Post 
  @model
  @auth(rules: 
    [
      { allow: owner },
      { allow: private, operations: [read]}
    ]
  ){
  id: ID!
  title: String!
  content: String
  image: String
}
